{"name": "test_mp_login[138123456782-246810-1381234567118]", "status": "broken", "statusDetails": {"message": "NameError: name 'allure' is not defined", "trace": "self = <scripts.test_01_mp_login.TestMpLogin object at 0x106116b10>\nusername = '138123456782', code = 246810, expect = '1381234567118'\n\n    @pytest.mark.parametrize(\"username, code, expect\", readyaml(\"mp_login.yml\"))\n    def test_mp_login(self, username, code, expect):\n    \n        try:\n            # 调用登录业务方法\n>           self.mp.page_mp_login(username, code)\n\ntest_01_mp_login.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.page_mp_login.PageMpLogin object at 0x10675ea50>\nusername = '138123456782', code = 246810\n\n    def page_mp_login(self, username, code):\n        \"\"\"\n        调用相同页面的操作步骤\n        跨页面不考虑\n        :return:\n        \"\"\"\n        self.page_input_username(username)\n        self.page_input_code(code)\n        self.page_click_login_btn()\n>       self.page_get_nickname()\n\n../page/page_mp_login.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.page_mp_login.PageMpLogin object at 0x10675ea50>\n\n    def page_get_nickname(self):\n>       nickname = self.base_get_text(page.mp_nickname)\n\n../page/page_mp_login.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.page_mp_login.PageMpLogin object at 0x10675ea50>\nloc = ('css selector', '.user-name')\n\n    def base_get_text(self, loc):\n        \"\"\"\n    \n        :param loc:  元素定位信息\n        :return: 元素文本\n        \"\"\"\n>       return self.base_find(loc).text\n\n../base/base.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.page_mp_login.PageMpLogin object at 0x10675ea50>\nloc = ('css selector', '.user-name'), timeout = 30, poll = 0.5\n\n    def base_find(self, loc, timeout=30, poll=0.5):\n        \"\"\"\n    \n        :param loc: 格式为列表或元组 内容：元素定位信息\n        :param timeout: 查找元素超时时间 默认30s\n        :param poll: 查找元素频率 默认为0.5s\n        :return: 元素\n        \"\"\"\n        log.info(\"正在查找元素:{}\".format(loc))\n        return (WebDriverWait(self.driver, timeout=timeout, poll_frequency=poll)\n>               .until(lambda x: x.find_element(*loc)))\n\n../base/base.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1a09e384fd1cd8b6447d1bc009787e1c\")>\nmethod = <function Base.base_find.<locals>.<lambda> at 0x106becf80>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <scripts.test_01_mp_login.TestMpLogin object at 0x106116b10>\nusername = '138123456782', code = 246810, expect = '1381234567118'\n\n    @pytest.mark.parametrize(\"username, code, expect\", readyaml(\"mp_login.yml\"))\n    def test_mp_login(self, username, code, expect):\n    \n        try:\n            # 调用登录业务方法\n            self.mp.page_mp_login(username, code)\n            # 断言\n            assert expect == self.mp.page_get_nickname()\n        except  Exception as e:\n            print(\"错误原因\",e)\n>           self.mp.base_get_img()\n\ntest_01_mp_login.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../base/base.py:68: in base_get_img\n    self.__base_write_img(file_path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.page_mp_login.PageMpLogin object at 0x10675ea50>\nfile_path = '/Users/lq/python/test/2020-09/uiAutoTestHmtt/image/20200911170733_.png'\n\n    def __base_write_img(self, file_path):\n        with open(file_path, \"rb\") as f:\n            file = f.read()\n>           allure.attach(\"错误原因\", file, allure.attach_type.PNG)\nE           NameError: name 'allure' is not defined\n\n../base/base.py:73: NameError"}, "attachments": [{"name": "log", "source": "5fe0dd00-2dfa-4cc7-a816-008d80ddb839-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'138123456782'"}, {"name": "code", "value": "246810"}, {"name": "expect", "value": "'1381234567118'"}], "start": 1599815221409, "stop": 1599815254619, "uuid": "e8cf2592-e741-4208-8a82-4a937f07383f", "historyId": "eb46d7bce1ac87d6fbe01bdbb30bfee5", "testCaseId": "0ef744100323d73770fc699b5f270c3a", "fullName": "scripts.test_01_mp_login.TestMpLogin#test_mp_login", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_01_mp_login"}, {"name": "subSuite", "value": "TestMpLogin"}, {"name": "host", "value": "promote.cache-dns.local"}, {"name": "thread", "value": "50165-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_01_mp_login"}]}