{"name": "test_mp_login[woshi-lallalallala-数据库]", "status": "broken", "statusDetails": {"message": "NameError: name 'allure' is not defined", "trace": "self = <scripts.test_02_mp_article.TestMpLogin object at 0x1046949d0>\ntitle = 'woshi', content = 'lallalallala', click_text = '数据库'\n\n    @pytest.mark.parametrize(\"title, content, click_text\", readyaml(\"mp_article.yml\"))\n    def test_mp_login(self, title, content, click_text):\n    \n        try:\n            # 调用登录业务方法\n>           self.mp.page_mp_articel(title, content,click_text)\n\ntest_02_mp_article.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.page_mp_article.PageMpArticle object at 0x105054f10>\ntitle = 'woshi', content = 'lallalallala', click_text = '数据库'\n\n    def page_mp_articel(self,title,content,click_text):\n>       self.page_click_content_manage()\n\n../page/page_mp_article.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.page_mp_article.PageMpArticle object at 0x105054f10>\n\n    def page_click_content_manage(self):\n>       self.bass_click(page.mp_content_manage)\n\n../page/page_mp_article.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.page_mp_article.PageMpArticle object at 0x105054f10>\nloc = ('xpath', \"//span[text()='内容管理']/..\")\n\n    def bass_click(self, loc):\n        \"\"\"\n    \n        :param loc:  元素定位信息\n        \"\"\"\n>       self.base_find(loc).click()\n\n../base/base.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.page_mp_article.PageMpArticle object at 0x105054f10>\nloc = ('xpath', \"//span[text()='内容管理']/..\"), timeout = 30, poll = 0.5\n\n    def base_find(self, loc, timeout=30, poll=0.5):\n        \"\"\"\n    \n        :param loc: 格式为列表或元组 内容：元素定位信息\n        :param timeout: 查找元素超时时间 默认30s\n        :param poll: 查找元素频率 默认为0.5s\n        :return: 元素\n        \"\"\"\n        log.info(\"正在查找元素:{}\".format(loc))\n        return (WebDriverWait(self.driver, timeout=timeout, poll_frequency=poll)\n>               .until(lambda x: x.find_element(*loc)))\n\n../base/base.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"93c00c72aa8080ca01a179cc1668a089\")>\nmethod = <function Base.base_find.<locals>.<lambda> at 0x104e8e680>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <scripts.test_02_mp_article.TestMpLogin object at 0x1046949d0>\ntitle = 'woshi', content = 'lallalallala', click_text = '数据库'\n\n    @pytest.mark.parametrize(\"title, content, click_text\", readyaml(\"mp_article.yml\"))\n    def test_mp_login(self, title, content, click_text):\n    \n        try:\n            # 调用登录业务方法\n            self.mp.page_mp_articel(title, content,click_text)\n            # 断言\n            assert expect == self.mp.page_get_info()\n        except  Exception as e:\n            print(\"错误原因\",e)\n>           self.mp.base_get_img()\n\ntest_02_mp_article.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../base/base.py:68: in base_get_img\n    self.__base_write_img(file_path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.page_mp_article.PageMpArticle object at 0x105054f10>\nfile_path = '/Users/lq/python/test/2020-09/uiAutoTestHmtt/image/20200911181735_.png'\n\n    def __base_write_img(self, file_path):\n        with open(file_path, \"rb\") as f:\n            file = f.read()\n>           allure.attach(\"错误原因\", file, allure.attach_type.PNG)\nE           NameError: name 'allure' is not defined\n\n../base/base.py:73: NameError"}, "attachments": [{"name": "log", "source": "bb74ef0e-bc6e-42ad-9e41-b7e89340494a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "title", "value": "'woshi'"}, {"name": "content", "value": "'lallalallala'"}, {"name": "click_text", "value": "'数据库'"}], "start": 1599819425731, "stop": 1599819457233, "uuid": "5f88634e-88f6-4431-b35d-49a07dfa7297", "historyId": "360d0698737556c219b2cf57316b6569", "testCaseId": "9b66674a365236be33f83214238d0445", "fullName": "scripts.test_02_mp_article.TestMpLogin#test_mp_login", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_02_mp_article"}, {"name": "subSuite", "value": "TestMpLogin"}, {"name": "host", "value": "promote.cache-dns.local"}, {"name": "thread", "value": "52838-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_02_mp_article"}]}